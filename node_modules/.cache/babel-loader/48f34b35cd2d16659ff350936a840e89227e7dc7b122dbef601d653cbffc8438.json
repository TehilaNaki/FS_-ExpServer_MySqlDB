{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tehila Naki\\\\Documents\\\\SE\\\\Y4\\\\FS\\\\Project6_Server\\\\project6\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link, Navigate, useParams, useNavigate } from \"react-router-dom\";\nimport \"../css/Posts.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Posts(_ref) {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [editedPost, setEditedPost] = useState(null);\n  const [editedComment, setEditedComment] = useState(null);\n  //const [editedCommentIndex, setEditedCommentIndex] = useState(null);\n  const [newPost, setNewPost] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const [newComment, setNewComment] = useState({\n    name: \"\",\n    email: \"\",\n    body: \"\"\n  });\n  const {\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const postRef = useRef(null);\n  const [isAddingPost, setIsAddingPost] = useState(false);\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  useEffect(() => {\n    if (user && user.id) {\n      axios.get(`http://localhost:3010/users/${user.id}/posts`).then(response => {\n        setPosts(response.data);\n        console.log('success');\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    if (editedPost) {\n      postRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [editedPost]);\n  const newPostDraft = {\n    title: newPost.title,\n    body: newPost.body\n  };\n  const handleAddPost = () => {\n    setIsAddingPost(true);\n  };\n  const handleCommentsClick = postId => {\n    console.log(postId);\n    setSelectedPostId(postId);\n    axios.get(`http://localhost:3010/comments/${postId}`).then(response => {\n      const comments = response.data;\n      console.log(comments);\n      setComments(comments);\n    }).catch(error => {\n      console.error('Error retrieving comments:', error);\n    });\n  };\n  const handleCloseCommentsClick = () => {\n    setSelectedPostId(null);\n  };\n  const handlePostClick = postId => {\n    navigate(`/Posts/${postId}`);\n  };\n  const handleEditPost = postId => {\n    const selectedPost = posts.find(post => post.id === postId);\n    setEditedPost(selectedPost);\n  };\n  const handleSavePost = () => {\n    if (editedPost) {\n      axios.put(`http://localhost:3010/posts/${editedPost.id}`, editedPost).then(response => {\n        console.log('Post updated successfully');\n        setEditedPost(null);\n      }).catch(error => {\n        console.error('Error updating post:', error);\n      });\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditedPost(null);\n  };\n  const handleDeletePost = postId => {\n    axios.delete(`http://localhost:3010/posts/${postId}`).then(response => {\n      console.log('Post deleted successfully');\n      const updatedPosts = posts.filter(post => post.id !== postId);\n      setPosts(updatedPosts);\n    }).catch(error => {\n      console.error('Error deleting post:', error);\n    });\n  };\n  const handleNewPostChange = e => {\n    setNewPost({\n      ...newPost,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSaveNewPost = () => {\n    const newPostWithId = {\n      ...newPost,\n      user_id: user.id\n    };\n    axios.post('http://localhost:3010/posts', newPostWithId).then(response => {\n      const postId = response.data.id;\n      console.log('New post created with ID:', postId);\n      const updatedPosts = [...posts, newPostWithId];\n      setPosts(updatedPosts);\n      setNewPost({\n        title: \"\",\n        body: \"\"\n      });\n      setIsAddingPost(false);\n    }).catch(error => {\n      console.error('Error creating post:', error);\n    });\n  };\n  const handleCancelAddPost = () => {\n    setIsAddingPost(false);\n  };\n  const handleAddComment = () => {\n    setIsAddingComment(true);\n  };\n  const handleSaveComment = () => {\n    if (editedComment !== null) {\n      // Logic to save the edited comment\n      axios.put(`http://localhost:3010/comments/${editedComment.id}`, editedComment).then(response => {\n        console.log('Comment updated successfully');\n        const updatedComments = comments.map(comment => comment.id === editedComment.id ? editedComment : comment);\n        setComments(updatedComments);\n        setEditedComment(null);\n      }).catch(error => {\n        console.error('Error updating comment:', error);\n      });\n    } else if (newComment) {\n      // Logic to save the new comment\n      const newCommentWithId = {\n        ...newComment,\n        post_id: selectedPostId\n      };\n      axios.post(\"http://localhost:3010/comments\", newCommentWithId).then(response => {\n        console.log(\"Comment added successfully\");\n        const updatedComments = [...comments, newCommentWithId];\n        setComments(updatedComments);\n        setNewComment({\n          name: \"\",\n          email: \"\",\n          body: \"\"\n        });\n        setIsAddingComment(false);\n      }).catch(error => {\n        console.error(\"Error adding comment:\", error);\n        // Handle error\n      });\n    }\n  };\n\n  const handleCancelEditComment = () => {\n    setEditedComment(null);\n  };\n  const handleEditComment = (comment, index) => {\n    setEditedComment(comment);\n  };\n  const handleDeleteComment = commentId => {\n    axios.delete(`http://localhost:3010/comments/${commentId}`).then(response => {\n      console.log('Comment deleted successfully');\n      const updatedComments = comments.filter(comment => comment.id !== commentId);\n      setComments(updatedComments);\n    }).catch(error => {\n      console.error('Error deleting comment:', error);\n    });\n  };\n  const handleNewCommentChange = e => {\n    setNewComment({\n      ...newComment,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: post.id === (editedPost === null || editedPost === void 0 ? void 0 : editedPost.id) ? postRef : null,\n        className: postId === post.id ? \"selected-post post\" : \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), editedPost && editedPost.id === post.id ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedPost.body,\n          onChange: e => setEditedPost({\n            ...editedPost,\n            body: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this), selectedPostId === post.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: editedComment && editedComment.id === comment.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Name\",\n                value: editedComment.name,\n                onChange: e => setEditedComment({\n                  ...editedComment,\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Email\",\n                value: editedComment.email,\n                onChange: e => setEditedComment({\n                  ...editedComment,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"body\",\n                placeholder: \"Comment body\",\n                value: editedComment.body,\n                onChange: e => setEditedComment({\n                  ...editedComment,\n                  body: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSaveComment,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleCancelEditComment,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Name: \", comment.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Email: \", comment.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditComment(comment, index),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteComment(comment.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 19\n          }, this)), isAddingComment ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"Name\",\n              value: newComment.name,\n              onChange: handleNewCommentChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              value: newComment.email,\n              onChange: handleNewCommentChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"body\",\n              placeholder: \"Comment body\",\n              value: newComment.body,\n              onChange: handleNewCommentChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveComment,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsAddingComment(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddComment,\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this), selectedPostId === post.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCloseCommentsClick,\n          children: \"Close Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentsClick(post.id),\n          children: \"View Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }, this), editedPost && editedPost.id === post.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSavePost,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditPost(post.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeletePost(post.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-post-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-post-button\",\n        onClick: handleAddPost,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), isAddingPost && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Post title\",\n        value: newPostDraft.title,\n        onChange: handleNewPostChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"body\",\n        placeholder: \"Post body\",\n        value: newPostDraft.body,\n        onChange: handleNewPostChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveNewPost,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelAddPost,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"v/tXYqRndM2fH60Lp2/dlcyfsA4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","Navigate","useParams","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_ref","_s","user","posts","setPosts","selectedPostId","setSelectedPostId","comments","setComments","editedPost","setEditedPost","editedComment","setEditedComment","newPost","setNewPost","title","body","newComment","setNewComment","name","email","postId","navigate","postRef","isAddingPost","setIsAddingPost","isAddingComment","setIsAddingComment","id","get","then","response","data","console","log","catch","error","current","scrollIntoView","behavior","newPostDraft","handleAddPost","handleCommentsClick","handleCloseCommentsClick","handlePostClick","handleEditPost","selectedPost","find","post","handleSavePost","put","handleCancelEdit","handleDeletePost","delete","updatedPosts","filter","handleNewPostChange","e","target","value","handleSaveNewPost","newPostWithId","user_id","handleCancelAddPost","handleAddComment","handleSaveComment","updatedComments","map","comment","newCommentWithId","post_id","handleCancelEditComment","handleEditComment","index","handleDeleteComment","commentId","handleNewCommentChange","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tehila Naki/Documents/SE/Y4/FS/Project6_Server/project6/src/pages/Posts.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link, Navigate, useParams, useNavigate } from \"react-router-dom\";\r\nimport \"../css/Posts.css\";\r\nimport axios from 'axios';\r\n\r\nfunction Posts({ user }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPostId, setSelectedPostId] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [editedPost, setEditedPost] = useState(null);\r\n  const [editedComment, setEditedComment] = useState(null);\r\n  //const [editedCommentIndex, setEditedCommentIndex] = useState(null);\r\n  const [newPost, setNewPost] = useState({ title: \"\", body: \"\" });\r\n  const [newComment, setNewComment] = useState({ name: \"\", email: \"\", body: \"\" });\r\n  const { postId } = useParams();\r\n  const navigate = useNavigate();\r\n  const postRef = useRef(null);\r\n  const [isAddingPost, setIsAddingPost] = useState(false);\r\n  const [isAddingComment, setIsAddingComment] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id) {\r\n      axios.get(`http://localhost:3010/users/${user.id}/posts`)\r\n        .then(response => {\r\n          setPosts(response.data);\r\n          console.log('success');\r\n      })\r\n        .catch(error => {\r\n          console.error(error);\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (editedPost) {\r\n      postRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [editedPost]);\r\n\r\n  const newPostDraft = {\r\n    title: newPost.title,\r\n    body: newPost.body\r\n  };\r\n\r\n  const handleAddPost = () => {\r\n    setIsAddingPost(true);\r\n  };\r\n\r\n  const handleCommentsClick = (postId) => {\r\n    console.log(postId);\r\n    setSelectedPostId(postId);\r\n    axios\r\n      .get(`http://localhost:3010/comments/${postId}`)\r\n      .then((response) => {\r\n        const comments = response.data;\r\n        console.log(comments);\r\n        setComments(comments);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error retrieving comments:', error);\r\n      });\r\n  };\r\n\r\n  const handleCloseCommentsClick = () => {\r\n    setSelectedPostId(null);\r\n  };\r\n\r\n  const handlePostClick = (postId) => {\r\n    navigate(`/Posts/${postId}`);\r\n  };\r\n\r\n  const handleEditPost = (postId) => {\r\n    const selectedPost = posts.find((post) => post.id === postId);\r\n    setEditedPost(selectedPost);\r\n  };\r\n\r\n  const handleSavePost = () => {\r\n    if (editedPost) {\r\n      axios\r\n        .put(`http://localhost:3010/posts/${editedPost.id}`, editedPost)\r\n        .then((response) => {\r\n          console.log('Post updated successfully');\r\n          setEditedPost(null);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error updating post:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditedPost(null);\r\n  };\r\n\r\n  const handleDeletePost = (postId) => {\r\n    axios\r\n      .delete(`http://localhost:3010/posts/${postId}`)\r\n      .then((response) => {\r\n        console.log('Post deleted successfully');\r\n        const updatedPosts = posts.filter((post) => post.id !== postId);\r\n        setPosts(updatedPosts);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error deleting post:', error);\r\n      });\r\n  };\r\n\r\n  const handleNewPostChange = (e) => {\r\n    setNewPost({ ...newPost, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSaveNewPost = () => {\r\n    const newPostWithId = {\r\n      ...newPost,\r\n      user_id: user.id,\r\n    };\r\n\r\n    axios\r\n      .post('http://localhost:3010/posts', newPostWithId)\r\n      .then((response) => {\r\n        const postId = response.data.id;\r\n        console.log('New post created with ID:', postId);\r\n        const updatedPosts = [...posts, newPostWithId];\r\n        setPosts(updatedPosts);\r\n        setNewPost({ title: \"\", body: \"\" });\r\n        setIsAddingPost(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error creating post:', error);\r\n      });\r\n  };\r\n\r\n  const handleCancelAddPost = () => {\r\n    setIsAddingPost(false);\r\n  };\r\n\r\n  const handleAddComment = () => {\r\n    setIsAddingComment(true);\r\n  };\r\n\r\n  const handleSaveComment = () => {\r\n    if (editedComment !== null) {\r\n      // Logic to save the edited comment\r\n      axios\r\n        .put(`http://localhost:3010/comments/${editedComment.id}`, editedComment)\r\n        .then((response) => {\r\n          console.log('Comment updated successfully');\r\n          const updatedComments = comments.map((comment) =>\r\n            comment.id === editedComment.id ? editedComment : comment\r\n          );\r\n          setComments(updatedComments);\r\n          setEditedComment(null);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error updating comment:', error);\r\n        });\r\n    } else if(newComment) {\r\n      // Logic to save the new comment\r\n      const newCommentWithId = {\r\n       ...newComment,\r\n       post_id: selectedPostId,\r\n     };\r\n\r\n     axios\r\n     .post(\"http://localhost:3010/comments\", newCommentWithId)\r\n     .then(response => {\r\n       console.log(\"Comment added successfully\");\r\n       const updatedComments = [...comments, newCommentWithId];\r\n       setComments(updatedComments);\r\n       setNewComment({ name: \"\", email: \"\", body: \"\" });\r\n       setIsAddingComment(false);\r\n     })\r\n     .catch(error => {\r\n       console.error(\"Error adding comment:\", error);\r\n       // Handle error\r\n     });\r\n    \r\n   }\r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  const handleCancelEditComment = () => {\r\n    setEditedComment(null);\r\n  };\r\n\r\n  const handleEditComment = (comment, index) => {\r\n    setEditedComment(comment);\r\n  };\r\n\r\n  const handleDeleteComment = (commentId) => {\r\n    axios\r\n      .delete(`http://localhost:3010/comments/${commentId}`)\r\n      .then((response) => {\r\n        console.log('Comment deleted successfully');\r\n        const updatedComments = comments.filter((comment) => comment.id !== commentId);\r\n        setComments(updatedComments);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error deleting comment:', error);\r\n      });\r\n  };\r\n\r\n  const handleNewCommentChange = (e) => {\r\n    setNewComment({ ...newComment, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"posts-container\">\r\n        {posts.map((post) => (\r\n          <div\r\n            key={post.id}\r\n            ref={post.id === editedPost?.id ? postRef : null}\r\n            className={postId === post.id ? \"selected-post post\" : \"post\"}\r\n          >\r\n            <h3>{post.title}</h3>\r\n            {editedPost && editedPost.id === post.id ? (\r\n              <textarea\r\n                value={editedPost.body}\r\n                onChange={(e) =>\r\n                  setEditedPost({ ...editedPost, body: e.target.value })\r\n                }\r\n              />\r\n            ) : (\r\n              <p>{post.body}</p>\r\n            )}\r\n            {selectedPostId === post.id && (\r\n              <div>\r\n                <h4>Comments:</h4>\r\n                {comments.map((comment, index) => (\r\n                  <div key={comment.id} className=\"comment\">\r\n                    {editedComment && editedComment.id === comment.id ? (\r\n                      <div>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          placeholder=\"Name\"\r\n                          value={editedComment.name}\r\n                          onChange={(e) =>\r\n                            setEditedComment({\r\n                              ...editedComment,\r\n                              name: e.target.value,\r\n                            })\r\n                          }\r\n                        />\r\n                        <input\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"Email\"\r\n                          value={editedComment.email}\r\n                          onChange={(e) =>\r\n                            setEditedComment({\r\n                              ...editedComment,\r\n                              email: e.target.value,\r\n                            })\r\n                          }\r\n                        />\r\n                        <textarea\r\n                          name=\"body\"\r\n                          placeholder=\"Comment body\"\r\n                          value={editedComment.body}\r\n                          onChange={(e) =>\r\n                            setEditedComment({\r\n                              ...editedComment,\r\n                              body: e.target.value,\r\n                            })\r\n                          }\r\n                        />\r\n                        <button onClick={handleSaveComment}>Save</button>\r\n                        <button onClick={handleCancelEditComment}>\r\n                          Cancel\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <>\r\n                        <p>Name: {comment.name}</p>\r\n                        <p>Email: {comment.email}</p>\r\n                        <p>{comment.body}</p>\r\n                        <button onClick={() => handleEditComment(comment, index)}>\r\n                          Edit\r\n                        </button>\r\n                        <button onClick={() => handleDeleteComment(comment.id)}>\r\n                          Delete\r\n                        </button>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n                {isAddingComment ? (\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder=\"Name\"\r\n                      value={newComment.name}\r\n                      onChange={handleNewCommentChange}\r\n                    />\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={newComment.email}\r\n                      onChange={handleNewCommentChange}\r\n                    />\r\n                    <textarea\r\n                      name=\"body\"\r\n                      placeholder=\"Comment body\"\r\n                      value={newComment.body}\r\n                      onChange={handleNewCommentChange}\r\n                    />\r\n                    <button onClick={handleSaveComment}>Save</button>\r\n                    <button onClick={() => setIsAddingComment(false)}>\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <button onClick={handleAddComment}>Add Comment</button>\r\n                )}\r\n              </div>\r\n            )}\r\n            {selectedPostId === post.id ? (\r\n              <button onClick={handleCloseCommentsClick}>Close Comments</button>\r\n            ) : (\r\n              <button onClick={() => handleCommentsClick(post.id)}>\r\n                View Comments\r\n              </button>\r\n            )}\r\n            {editedPost && editedPost.id === post.id ? (\r\n              <>\r\n                <button onClick={handleSavePost}>Save</button>\r\n                <button onClick={handleCancelEdit}>Cancel</button>\r\n              </>\r\n            ) : (\r\n              <button onClick={() => handleEditPost(post.id)}>Edit</button>\r\n            )}\r\n            <button onClick={() => handleDeletePost(post.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"add-post-container\">\r\n        <button className=\"add-post-button\" onClick={handleAddPost}>\r\n          Add Post\r\n        </button>\r\n      </div>\r\n\r\n      {isAddingPost && (\r\n        <div className=\"post\">\r\n          <h3>New Post</h3>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Post title\"\r\n            value={newPostDraft.title}\r\n            onChange={handleNewPostChange}\r\n          />\r\n          <textarea\r\n            name=\"body\"\r\n            placeholder=\"Post body\"\r\n            value={newPostDraft.body}\r\n            onChange={handleNewPostChange}\r\n          />\r\n          <button onClick={handleSaveNewPost}>Save</button>\r\n          <button onClick={handleCancelAddPost}>Cancel</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzE,OAAO,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,KAAKA,CAAAC,IAAA,EAAW;EAAAC,EAAA;EAAA,IAAV;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACrB,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACxD;EACA,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC;IAAE4B,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAC/D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC;IAAEgC,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEJ,IAAI,EAAE;EAAG,CAAC,CAAC;EAC/E,MAAM;IAAEK;EAAO,CAAC,GAAG7B,SAAS,CAAC,CAAC;EAC9B,MAAM8B,QAAQ,GAAG7B,WAAW,CAAC,CAAC;EAC9B,MAAM8B,OAAO,GAAGlC,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM,CAACmC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACuC,eAAe,EAAEC,kBAAkB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd,IAAIc,IAAI,IAAIA,IAAI,CAAC0B,EAAE,EAAE;MACnBlC,KAAK,CAACmC,GAAG,CAAE,+BAA8B3B,IAAI,CAAC0B,EAAG,QAAO,CAAC,CACtDE,IAAI,CAACC,QAAQ,IAAI;QAChB3B,QAAQ,CAAC2B,QAAQ,CAACC,IAAI,CAAC;QACvBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MAC1B,CAAC,CAAC,CACCC,KAAK,CAACC,KAAK,IAAI;QACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAClC,IAAI,CAAC,CAAC;EAEVd,SAAS,CAAC,MAAM;IACd,IAAIqB,UAAU,EAAE;MACdc,OAAO,CAACc,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IACxD;EACF,CAAC,EAAE,CAAC9B,UAAU,CAAC,CAAC;EAEhB,MAAM+B,YAAY,GAAG;IACnBzB,KAAK,EAAEF,OAAO,CAACE,KAAK;IACpBC,IAAI,EAAEH,OAAO,CAACG;EAChB,CAAC;EAED,MAAMyB,aAAa,GAAGA,CAAA,KAAM;IAC1BhB,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMiB,mBAAmB,GAAIrB,MAAM,IAAK;IACtCY,OAAO,CAACC,GAAG,CAACb,MAAM,CAAC;IACnBf,iBAAiB,CAACe,MAAM,CAAC;IACzB3B,KAAK,CACFmC,GAAG,CAAE,kCAAiCR,MAAO,EAAC,CAAC,CAC/CS,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMxB,QAAQ,GAAGwB,QAAQ,CAACC,IAAI;MAC9BC,OAAO,CAACC,GAAG,CAAC3B,QAAQ,CAAC;MACrBC,WAAW,CAACD,QAAQ,CAAC;IACvB,CAAC,CAAC,CACD4B,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;EAED,MAAMO,wBAAwB,GAAGA,CAAA,KAAM;IACrCrC,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMsC,eAAe,GAAIvB,MAAM,IAAK;IAClCC,QAAQ,CAAE,UAASD,MAAO,EAAC,CAAC;EAC9B,CAAC;EAED,MAAMwB,cAAc,GAAIxB,MAAM,IAAK;IACjC,MAAMyB,YAAY,GAAG3C,KAAK,CAAC4C,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACpB,EAAE,KAAKP,MAAM,CAAC;IAC7DX,aAAa,CAACoC,YAAY,CAAC;EAC7B,CAAC;EAED,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIxC,UAAU,EAAE;MACdf,KAAK,CACFwD,GAAG,CAAE,+BAA8BzC,UAAU,CAACmB,EAAG,EAAC,EAAEnB,UAAU,CAAC,CAC/DqB,IAAI,CAAEC,QAAQ,IAAK;QAClBE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxCxB,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,CAAC,CACDyB,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;IAC7BzC,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAM0C,gBAAgB,GAAI/B,MAAM,IAAK;IACnC3B,KAAK,CACF2D,MAAM,CAAE,+BAA8BhC,MAAO,EAAC,CAAC,CAC/CS,IAAI,CAAEC,QAAQ,IAAK;MAClBE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC,MAAMoB,YAAY,GAAGnD,KAAK,CAACoD,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACpB,EAAE,KAAKP,MAAM,CAAC;MAC/DjB,QAAQ,CAACkD,YAAY,CAAC;IACxB,CAAC,CAAC,CACDnB,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EAED,MAAMoB,mBAAmB,GAAIC,CAAC,IAAK;IACjC3C,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAE,CAAC4C,CAAC,CAACC,MAAM,CAACvC,IAAI,GAAGsC,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,aAAa,GAAG;MACpB,GAAGhD,OAAO;MACViD,OAAO,EAAE5D,IAAI,CAAC0B;IAChB,CAAC;IAEDlC,KAAK,CACFsD,IAAI,CAAC,6BAA6B,EAAEa,aAAa,CAAC,CAClD/B,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMV,MAAM,GAAGU,QAAQ,CAACC,IAAI,CAACJ,EAAE;MAC/BK,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEb,MAAM,CAAC;MAChD,MAAMiC,YAAY,GAAG,CAAC,GAAGnD,KAAK,EAAE0D,aAAa,CAAC;MAC9CzD,QAAQ,CAACkD,YAAY,CAAC;MACtBxC,UAAU,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC,CAAC;MACnCS,eAAe,CAAC,KAAK,CAAC;IACxB,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EAED,MAAM2B,mBAAmB,GAAGA,CAAA,KAAM;IAChCtC,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMuC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BrC,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMsC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAItD,aAAa,KAAK,IAAI,EAAE;MAC1B;MACAjB,KAAK,CACFwD,GAAG,CAAE,kCAAiCvC,aAAa,CAACiB,EAAG,EAAC,EAAEjB,aAAa,CAAC,CACxEmB,IAAI,CAAEC,QAAQ,IAAK;QAClBE,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC3C,MAAMgC,eAAe,GAAG3D,QAAQ,CAAC4D,GAAG,CAAEC,OAAO,IAC3CA,OAAO,CAACxC,EAAE,KAAKjB,aAAa,CAACiB,EAAE,GAAGjB,aAAa,GAAGyD,OACpD,CAAC;QACD5D,WAAW,CAAC0D,eAAe,CAAC;QAC5BtD,gBAAgB,CAAC,IAAI,CAAC;MACxB,CAAC,CAAC,CACDuB,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN,CAAC,MAAM,IAAGnB,UAAU,EAAE;MACpB;MACA,MAAMoD,gBAAgB,GAAG;QACxB,GAAGpD,UAAU;QACbqD,OAAO,EAAEjE;MACX,CAAC;MAEDX,KAAK,CACJsD,IAAI,CAAC,gCAAgC,EAAEqB,gBAAgB,CAAC,CACxDvC,IAAI,CAACC,QAAQ,IAAI;QAChBE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QACzC,MAAMgC,eAAe,GAAG,CAAC,GAAG3D,QAAQ,EAAE8D,gBAAgB,CAAC;QACvD7D,WAAW,CAAC0D,eAAe,CAAC;QAC5BhD,aAAa,CAAC;UAAEC,IAAI,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEJ,IAAI,EAAE;QAAG,CAAC,CAAC;QAChDW,kBAAkB,CAAC,KAAK,CAAC;MAC3B,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;QACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C;MACF,CAAC,CAAC;IAEJ;EACD,CAAC;;EAKD,MAAMmC,uBAAuB,GAAGA,CAAA,KAAM;IACpC3D,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAM4D,iBAAiB,GAAGA,CAACJ,OAAO,EAAEK,KAAK,KAAK;IAC5C7D,gBAAgB,CAACwD,OAAO,CAAC;EAC3B,CAAC;EAED,MAAMM,mBAAmB,GAAIC,SAAS,IAAK;IACzCjF,KAAK,CACF2D,MAAM,CAAE,kCAAiCsB,SAAU,EAAC,CAAC,CACrD7C,IAAI,CAAEC,QAAQ,IAAK;MAClBE,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C,MAAMgC,eAAe,GAAG3D,QAAQ,CAACgD,MAAM,CAAEa,OAAO,IAAKA,OAAO,CAACxC,EAAE,KAAK+C,SAAS,CAAC;MAC9EnE,WAAW,CAAC0D,eAAe,CAAC;IAC9B,CAAC,CAAC,CACD/B,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC;EAED,MAAMwC,sBAAsB,GAAInB,CAAC,IAAK;IACpCvC,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAE,CAACwC,CAAC,CAACC,MAAM,CAACvC,IAAI,GAAGsC,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EACnE,CAAC;EAED,oBACE/D,OAAA;IAAAiF,QAAA,gBACEjF,OAAA;MAAKkF,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAC7B1E,KAAK,CAACgE,GAAG,CAAEnB,IAAI,iBACdpD,OAAA;QAEEmF,GAAG,EAAE/B,IAAI,CAACpB,EAAE,MAAKnB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEmB,EAAE,IAAGL,OAAO,GAAG,IAAK;QACjDuD,SAAS,EAAEzD,MAAM,KAAK2B,IAAI,CAACpB,EAAE,GAAG,oBAAoB,GAAG,MAAO;QAAAiD,QAAA,gBAE9DjF,OAAA;UAAAiF,QAAA,EAAK7B,IAAI,CAACjC;QAAK;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACpB1E,UAAU,IAAIA,UAAU,CAACmB,EAAE,KAAKoB,IAAI,CAACpB,EAAE,gBACtChC,OAAA;UACE+D,KAAK,EAAElD,UAAU,CAACO,IAAK;UACvBoE,QAAQ,EAAG3B,CAAC,IACV/C,aAAa,CAAC;YAAE,GAAGD,UAAU;YAAEO,IAAI,EAAEyC,CAAC,CAACC,MAAM,CAACC;UAAM,CAAC;QACtD;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,gBAEFvF,OAAA;UAAAiF,QAAA,EAAI7B,IAAI,CAAChC;QAAI;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAClB,EACA9E,cAAc,KAAK2C,IAAI,CAACpB,EAAE,iBACzBhC,OAAA;UAAAiF,QAAA,gBACEjF,OAAA;YAAAiF,QAAA,EAAI;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACjB5E,QAAQ,CAAC4D,GAAG,CAAC,CAACC,OAAO,EAAEK,KAAK,kBAC3B7E,OAAA;YAAsBkF,SAAS,EAAC,SAAS;YAAAD,QAAA,EACtClE,aAAa,IAAIA,aAAa,CAACiB,EAAE,KAAKwC,OAAO,CAACxC,EAAE,gBAC/ChC,OAAA;cAAAiF,QAAA,gBACEjF,OAAA;gBACEyF,IAAI,EAAC,MAAM;gBACXlE,IAAI,EAAC,MAAM;gBACXmE,WAAW,EAAC,MAAM;gBAClB3B,KAAK,EAAEhD,aAAa,CAACQ,IAAK;gBAC1BiE,QAAQ,EAAG3B,CAAC,IACV7C,gBAAgB,CAAC;kBACf,GAAGD,aAAa;kBAChBQ,IAAI,EAAEsC,CAAC,CAACC,MAAM,CAACC;gBACjB,CAAC;cACF;gBAAAqB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACFvF,OAAA;gBACEyF,IAAI,EAAC,OAAO;gBACZlE,IAAI,EAAC,OAAO;gBACZmE,WAAW,EAAC,OAAO;gBACnB3B,KAAK,EAAEhD,aAAa,CAACS,KAAM;gBAC3BgE,QAAQ,EAAG3B,CAAC,IACV7C,gBAAgB,CAAC;kBACf,GAAGD,aAAa;kBAChBS,KAAK,EAAEqC,CAAC,CAACC,MAAM,CAACC;gBAClB,CAAC;cACF;gBAAAqB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACFvF,OAAA;gBACEuB,IAAI,EAAC,MAAM;gBACXmE,WAAW,EAAC,cAAc;gBAC1B3B,KAAK,EAAEhD,aAAa,CAACK,IAAK;gBAC1BoE,QAAQ,EAAG3B,CAAC,IACV7C,gBAAgB,CAAC;kBACf,GAAGD,aAAa;kBAChBK,IAAI,EAAEyC,CAAC,CAACC,MAAM,CAACC;gBACjB,CAAC;cACF;gBAAAqB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACFvF,OAAA;gBAAQ2F,OAAO,EAAEtB,iBAAkB;gBAAAY,QAAA,EAAC;cAAI;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACjDvF,OAAA;gBAAQ2F,OAAO,EAAEhB,uBAAwB;gBAAAM,QAAA,EAAC;cAE1C;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,gBAENvF,OAAA,CAAAE,SAAA;cAAA+E,QAAA,gBACEjF,OAAA;gBAAAiF,QAAA,GAAG,QAAM,EAACT,OAAO,CAACjD,IAAI;cAAA;gBAAA6D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC3BvF,OAAA;gBAAAiF,QAAA,GAAG,SAAO,EAACT,OAAO,CAAChD,KAAK;cAAA;gBAAA4D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC7BvF,OAAA;gBAAAiF,QAAA,EAAIT,OAAO,CAACpD;cAAI;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrBvF,OAAA;gBAAQ2F,OAAO,EAAEA,CAAA,KAAMf,iBAAiB,CAACJ,OAAO,EAAEK,KAAK,CAAE;gBAAAI,QAAA,EAAC;cAE1D;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTvF,OAAA;gBAAQ2F,OAAO,EAAEA,CAAA,KAAMb,mBAAmB,CAACN,OAAO,CAACxC,EAAE,CAAE;gBAAAiD,QAAA,EAAC;cAExD;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,eACT;UACH,GAvDOf,OAAO,CAACxC,EAAE;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAwDf,CACN,CAAC,EACDzD,eAAe,gBACd9B,OAAA;YAAAiF,QAAA,gBACEjF,OAAA;cACEyF,IAAI,EAAC,MAAM;cACXlE,IAAI,EAAC,MAAM;cACXmE,WAAW,EAAC,MAAM;cAClB3B,KAAK,EAAE1C,UAAU,CAACE,IAAK;cACvBiE,QAAQ,EAAER;YAAuB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eACFvF,OAAA;cACEyF,IAAI,EAAC,OAAO;cACZlE,IAAI,EAAC,OAAO;cACZmE,WAAW,EAAC,OAAO;cACnB3B,KAAK,EAAE1C,UAAU,CAACG,KAAM;cACxBgE,QAAQ,EAAER;YAAuB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eACFvF,OAAA;cACEuB,IAAI,EAAC,MAAM;cACXmE,WAAW,EAAC,cAAc;cAC1B3B,KAAK,EAAE1C,UAAU,CAACD,IAAK;cACvBoE,QAAQ,EAAER;YAAuB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eACFvF,OAAA;cAAQ2F,OAAO,EAAEtB,iBAAkB;cAAAY,QAAA,EAAC;YAAI;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACjDvF,OAAA;cAAQ2F,OAAO,EAAEA,CAAA,KAAM5D,kBAAkB,CAAC,KAAK,CAAE;cAAAkD,QAAA,EAAC;YAElD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,gBAENvF,OAAA;YAAQ2F,OAAO,EAAEvB,gBAAiB;YAAAa,QAAA,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACvD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN,EACA9E,cAAc,KAAK2C,IAAI,CAACpB,EAAE,gBACzBhC,OAAA;UAAQ2F,OAAO,EAAE5C,wBAAyB;UAAAkC,QAAA,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,gBAElEvF,OAAA;UAAQ2F,OAAO,EAAEA,CAAA,KAAM7C,mBAAmB,CAACM,IAAI,CAACpB,EAAE,CAAE;UAAAiD,QAAA,EAAC;QAErD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT,EACA1E,UAAU,IAAIA,UAAU,CAACmB,EAAE,KAAKoB,IAAI,CAACpB,EAAE,gBACtChC,OAAA,CAAAE,SAAA;UAAA+E,QAAA,gBACEjF,OAAA;YAAQ2F,OAAO,EAAEtC,cAAe;YAAA4B,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9CvF,OAAA;YAAQ2F,OAAO,EAAEpC,gBAAiB;YAAA0B,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eAClD,CAAC,gBAEHvF,OAAA;UAAQ2F,OAAO,EAAEA,CAAA,KAAM1C,cAAc,CAACG,IAAI,CAACpB,EAAE,CAAE;UAAAiD,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAC7D,eACDvF,OAAA;UAAQ2F,OAAO,EAAEA,CAAA,KAAMnC,gBAAgB,CAACJ,IAAI,CAACpB,EAAE,CAAE;UAAAiD,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GA5H5DnC,IAAI,CAACpB,EAAE;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA6HT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvF,OAAA;MAAKkF,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eACjCjF,OAAA;QAAQkF,SAAS,EAAC,iBAAiB;QAACS,OAAO,EAAE9C,aAAc;QAAAoC,QAAA,EAAC;MAE5D;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL3D,YAAY,iBACX5B,OAAA;MAAKkF,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBjF,OAAA;QAAAiF,QAAA,EAAI;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBvF,OAAA;QACEyF,IAAI,EAAC,MAAM;QACXlE,IAAI,EAAC,OAAO;QACZmE,WAAW,EAAC,YAAY;QACxB3B,KAAK,EAAEnB,YAAY,CAACzB,KAAM;QAC1BqE,QAAQ,EAAE5B;MAAoB;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFvF,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXmE,WAAW,EAAC,WAAW;QACvB3B,KAAK,EAAEnB,YAAY,CAACxB,IAAK;QACzBoE,QAAQ,EAAE5B;MAAoB;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFvF,OAAA;QAAQ2F,OAAO,EAAE3B,iBAAkB;QAAAiB,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjDvF,OAAA;QAAQ2F,OAAO,EAAExB,mBAAoB;QAAAc,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClF,EAAA,CA5WQF,KAAK;EAAA,QASOP,SAAS,EACXC,WAAW;AAAA;AAAA+F,EAAA,GAVrBzF,KAAK;AA8Wd,eAAeA,KAAK;AAAC,IAAAyF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}