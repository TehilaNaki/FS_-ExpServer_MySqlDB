{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tehila Naki\\\\Documents\\\\SE\\\\Y4\\\\FS\\\\Project6_Server\\\\project6\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link, Navigate, useParams, useNavigate } from \"react-router-dom\";\nimport \"../css/Posts.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Posts(_ref) {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [editedPost, setEditedPost] = useState(null);\n  const [newPost, setNewPost] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const {\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const postRef = useRef(null);\n  const [isAddingPost, setIsAddingPost] = useState(false);\n  useEffect(() => {\n    if (user && user.id) {\n      // Add a conditional check\n      axios.get(`http://localhost:3010/users/${user.id}/posts`).then(response => {\n        setPosts(response.data);\n        console.log('success');\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    // Scroll to the edited post when it's opened for editing\n    if (editedPost) {\n      postRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [editedPost]);\n  const newPostDraft = {\n    title: newPost.title,\n    body: newPost.body\n  };\n  const handleAddPost = () => {\n    setIsAddingPost(true);\n  };\n  const handleCommentsClick = postId => {\n    console.log(postId);\n    setSelectedPostId(postId);\n    axios.get(`http://localhost:3010/comments/:post_id/${postId}`).then(response => {\n      setComments(response.data);\n      console.log(\"Comments fetched successfully\");\n    }).catch(error => {\n      console.error(\"Error fetching comments:\", error);\n    });\n  };\n  const handleCloseCommentsClick = () => {\n    setSelectedPostId(null);\n  };\n  const handlePostClick = postId => {\n    navigate(`/Posts/${postId}`);\n  };\n  const handleEditPost = postId => {\n    const selectedPost = posts.find(post => post.id === postId);\n    setEditedPost(selectedPost);\n  };\n  const handleSavePost = () => {\n    if (editedPost) {\n      const updatedPosts = posts.map(post => {\n        if (post.id === editedPost.id) {\n          return editedPost;\n        }\n        return post;\n      });\n      setPosts(updatedPosts);\n      setEditedPost(null);\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditedPost(null);\n  };\n  const handleDeletePost = postId => {\n    const updatedPosts = posts.filter(post => post.id !== postId);\n    setPosts(updatedPosts);\n  };\n  const handleNewPostChange = e => {\n    setNewPost({\n      ...newPost,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSaveNewPost = () => {\n    const newPostWithId = {\n      ...newPost,\n      id: Math.floor(Math.random() * 1000) + 1,\n      userId: user.id\n    };\n    const updatedPosts = [...posts, newPostWithId];\n    setPosts(updatedPosts);\n    setNewPost({\n      title: \"\",\n      body: \"\"\n    });\n    setIsAddingPost(false);\n  };\n  const handleCancelAddPost = () => {\n    setIsAddingPost(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: post.id === (editedPost === null || editedPost === void 0 ? void 0 : editedPost.id) ? postRef : null,\n        className: postId === post.id ? \"selected-post post\" : \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), editedPost && editedPost.id === post.id ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedPost.body,\n          onChange: e => setEditedPost({\n            ...editedPost,\n            body: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), selectedPostId === post.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\\"Name: \\\" \", comment.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\\"Email: \\\" \", comment.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), selectedPostId === post.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCloseCommentsClick,\n          children: \"Close Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentsClick(post.id),\n          children: \"View Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this), editedPost && editedPost.id === post.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSavePost,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditPost(post.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeletePost(post.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-post-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-post-button\",\n        onClick: handleAddPost,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), isAddingPost && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Post title\",\n        value: newPostDraft.title,\n        onChange: handleNewPostChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"body\",\n        placeholder: \"Post body\",\n        value: newPostDraft.body,\n        onChange: handleNewPostChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveNewPost,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelAddPost,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"0zoB4hrzD8Crdcw7gRb06vONnnc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","Navigate","useParams","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_ref","_s","user","posts","setPosts","selectedPostId","setSelectedPostId","comments","setComments","editedPost","setEditedPost","newPost","setNewPost","title","body","postId","navigate","postRef","isAddingPost","setIsAddingPost","id","get","then","response","data","console","log","catch","error","current","scrollIntoView","behavior","newPostDraft","handleAddPost","handleCommentsClick","handleCloseCommentsClick","handlePostClick","handleEditPost","selectedPost","find","post","handleSavePost","updatedPosts","map","handleCancelEdit","handleDeletePost","filter","handleNewPostChange","e","target","name","value","handleSaveNewPost","newPostWithId","Math","floor","random","userId","handleCancelAddPost","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","onChange","comment","email","onClick","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Tehila Naki/Documents/SE/Y4/FS/Project6_Server/project6/src/pages/Posts.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link, Navigate, useParams, useNavigate } from \"react-router-dom\";\r\nimport \"../css/Posts.css\";\r\nimport axios from 'axios';\r\n\r\nfunction Posts({ user }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPostId, setSelectedPostId] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [editedPost, setEditedPost] = useState(null);\r\n  const [newPost, setNewPost] = useState({ title: \"\", body: \"\" });\r\n  const { postId } = useParams();\r\n  const navigate = useNavigate();\r\n  const postRef = useRef(null);\r\n  const [isAddingPost, setIsAddingPost] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id) { // Add a conditional check\r\n      axios.get(`http://localhost:3010/users/${user.id}/posts`)\r\n        .then(response => {\r\n          setPosts(response.data);\r\n          console.log('success');\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    // Scroll to the edited post when it's opened for editing\r\n    if (editedPost) {\r\n      postRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [editedPost]);\r\n\r\n  const newPostDraft = {\r\n    title: newPost.title,\r\n    body: newPost.body\r\n  };\r\n\r\n  const handleAddPost = () => {\r\n    setIsAddingPost(true);\r\n  };\r\n\r\n  const handleCommentsClick = (postId) => {\r\n    console.log(postId);\r\n    setSelectedPostId(postId);\r\n    axios\r\n    .get(`http://localhost:3010/comments/:post_id/${postId}`)\r\n    \r\n    .then((response) => {\r\n      setComments(response.data);\r\n      console.log(\"Comments fetched successfully\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error fetching comments:\", error);\r\n    });\r\n  };\r\n\r\n  const handleCloseCommentsClick = () => {\r\n    setSelectedPostId(null);\r\n  };\r\n\r\n  const handlePostClick = (postId) => {\r\n    navigate(`/Posts/${postId}`);\r\n  };\r\n\r\n  const handleEditPost = (postId) => {\r\n    const selectedPost = posts.find((post) => post.id === postId);\r\n    setEditedPost(selectedPost);\r\n  };\r\n\r\n  const handleSavePost = () => {\r\n    if (editedPost) {\r\n      const updatedPosts = posts.map((post) => {\r\n        if (post.id === editedPost.id) {\r\n          return editedPost;\r\n        }\r\n        return post;\r\n      });\r\n      setPosts(updatedPosts);\r\n      setEditedPost(null);\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditedPost(null);\r\n  };\r\n\r\n  const handleDeletePost = (postId) => {\r\n    const updatedPosts = posts.filter((post) => post.id !== postId);\r\n    setPosts(updatedPosts);\r\n  };\r\n\r\n  const handleNewPostChange = (e) => {\r\n    setNewPost({ ...newPost, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSaveNewPost = () => {\r\n    const newPostWithId = {\r\n      ...newPost,\r\n      id: Math.floor(Math.random() * 1000) + 1,\r\n      userId: user.id,\r\n    };\r\n    const updatedPosts = [...posts, newPostWithId];\r\n    setPosts(updatedPosts);\r\n    setNewPost({ title: \"\", body: \"\" });\r\n    setIsAddingPost(false);\r\n  };\r\n\r\n  const handleCancelAddPost = () => {\r\n    setIsAddingPost(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"posts-container\">\r\n        {posts.map((post) => (\r\n          <div\r\n            key={post.id}\r\n            ref={post.id === editedPost?.id ? postRef : null}\r\n            className={postId === post.id ? \"selected-post post\" : \"post\"}\r\n          >\r\n            <h3>{post.title}</h3>\r\n            {editedPost && editedPost.id === post.id ? (\r\n              <textarea\r\n                value={editedPost.body}\r\n                onChange={(e) =>\r\n                  setEditedPost({ ...editedPost, body: e.target.value })\r\n                }\r\n              />\r\n            ) : (\r\n              <p>{post.body}</p>\r\n            )}\r\n            {selectedPostId === post.id && (\r\n              <div>\r\n                <h4>Comments:</h4>\r\n                {comments.map((comment) => (\r\n                  <div key={comment.id} className=\"comment\">\r\n                    <p>\"Name: \" {comment.name}</p>\r\n                    <p>\"Email: \" {comment.email}</p>\r\n                    <p>{comment.body}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {selectedPostId === post.id ? (\r\n              <button onClick={handleCloseCommentsClick}>\r\n                Close Comments\r\n              </button>\r\n            ) : (\r\n              <button onClick={() => handleCommentsClick(post.id)}>\r\n                View Comments\r\n              </button>\r\n            )}\r\n            {editedPost && editedPost.id === post.id ? (\r\n              <>\r\n                <button onClick={handleSavePost}>Save</button>\r\n                <button onClick={handleCancelEdit}>Cancel</button>\r\n              </>\r\n            ) : (\r\n              <button onClick={() => handleEditPost(post.id)}>Edit</button>\r\n            )}\r\n            <button onClick={() => handleDeletePost(post.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"add-post-container\">\r\n        <button className=\"add-post-button\" onClick={handleAddPost}>\r\n          Add Post\r\n        </button>\r\n      </div>\r\n\r\n      {isAddingPost && (\r\n        <div className=\"post\">\r\n          <h3>New Post</h3>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Post title\"\r\n            value={newPostDraft.title}\r\n            onChange={handleNewPostChange}\r\n          />\r\n          <textarea\r\n            name=\"body\"\r\n            placeholder=\"Post body\"\r\n            value={newPostDraft.body}\r\n            onChange={handleNewPostChange}\r\n          />\r\n          <button onClick={handleSaveNewPost}>Save</button>\r\n          <button onClick={handleCancelAddPost}>Cancel</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}