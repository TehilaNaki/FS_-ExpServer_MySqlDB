{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tehila Naki\\\\Documents\\\\SE\\\\Y4\\\\FS\\\\Project6_Server\\\\project6\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport express from 'express';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const express = require('express');\n  //const mysql = require('mysql');\n\n  // const app = express();\n\n  // const pool = mysql.createPool({\n  //   host: 'localhost',\n  //   user: 'your_mysql_username',\n  //   password: 'your_mysql_password',\n  //   database: 'your_database_name',\n  // });\n\n  // function getUsers(callback) {\n  //   const query = 'SELECT * FROM users';\n  //   pool.query(query, (error, results) => {\n  //     if (error) {\n  //       console.error('Error fetching users:', error);\n  //       callback(error, null);\n  //     } else {\n  //       callback(null, results);\n  //     }\n  //   });\n  // }\n\n  // // GET /users\n  // app.get('/users', (req, res) => {\n  //   getUsers((error, results) => {\n  //     if (error) {\n  //       res.status(500).json({ error: 'An error occurred' });\n  //     } else {\n  //       res.json(results);\n  //     }\n  //   });\n  // });\n\n  // // Implement other routes and operations as needed\n\n  // const port = 5000; // Choose a port number\n\n  // app.listen(port, () => {\n  //   console.log(`Server is running on port ${port}`);\n  // });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","express","jsxDEV","_jsxDEV","App","require","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/Tehila Naki/Documents/SE/Y4/FS/Project6_Server/project6/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport express from 'express';\n\nfunction App() {\n  \n  const express = require('express');\n//const mysql = require('mysql');\n\n  // const app = express();\n  \n  // const pool = mysql.createPool({\n  //   host: 'localhost',\n  //   user: 'your_mysql_username',\n  //   password: 'your_mysql_password',\n  //   database: 'your_database_name',\n  // });\n  \n  // function getUsers(callback) {\n  //   const query = 'SELECT * FROM users';\n  //   pool.query(query, (error, results) => {\n  //     if (error) {\n  //       console.error('Error fetching users:', error);\n  //       callback(error, null);\n  //     } else {\n  //       callback(null, results);\n  //     }\n  //   });\n  // }\n  \n  // // GET /users\n  // app.get('/users', (req, res) => {\n  //   getUsers((error, results) => {\n  //     if (error) {\n  //       res.status(500).json({ error: 'An error occurred' });\n  //     } else {\n  //       res.json(results);\n  //     }\n  //   });\n  // });\n  \n  // // Implement other routes and operations as needed\n  \n  // const port = 5000; // Choose a port number\n  \n  // app.listen(port, () => {\n  //   console.log(`Server is running on port ${port}`);\n  // });\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAEb,MAAMH,OAAO,GAAGI,OAAO,CAAC,SAAS,CAAC;EACpC;;EAEE;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA,oBACEF,OAAA;IAAKG,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBJ,OAAA;MAAQG,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BJ,OAAA;QAAKK,GAAG,EAAER,IAAK;QAACM,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDV,OAAA;QAAAI,QAAA,GAAG,OACI,eAAAJ,OAAA;UAAAI,QAAA,EAAM;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,wBAC9B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJV,OAAA;QACEG,SAAS,EAAC,UAAU;QACpBQ,IAAI,EAAC,qBAAqB;QAC1BC,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QAAAT,QAAA,EAC1B;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACI,EAAA,GA9DQb,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}