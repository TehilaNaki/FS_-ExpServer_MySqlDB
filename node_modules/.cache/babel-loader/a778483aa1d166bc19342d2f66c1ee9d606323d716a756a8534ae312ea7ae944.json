{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tehila Naki\\\\Documents\\\\SE\\\\Y4\\\\FS\\\\Project6_Server\\\\project6\\\\src\\\\Components\\\\UsersComponent.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersComponent = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    axios.get('/users') // Assuming the server is running on the same host and port as the React app\n    .then(response => {\n      setUsers(response.data);\n    }).catch(error => {\n      console.error('Error fetching users:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.username\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersComponent, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UsersComponent;\nexport default UsersComponent;\nvar _c;\n$RefreshReg$(_c, \"UsersComponent\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","UsersComponent","_s","users","setUsers","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","username","id","_c","$RefreshReg$"],"sources":["C:/Users/Tehila Naki/Documents/SE/Y4/FS/Project6_Server/project6/src/Components/UsersComponent.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst UsersComponent = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('/users') // Assuming the server is running on the same host and port as the React app\r\n      .then((response) => {\r\n        setUsers(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching users:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <li key={user.id}>{user.username}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdF,KAAK,CACFU,GAAG,CAAC,QAAQ,CAAC,CAAC;IAAA,CACdC,IAAI,CAAEC,QAAQ,IAAK;MAClBH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdhB,OAAA;MAAAY,QAAA,EACGT,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACdlB,OAAA;QAAAY,QAAA,EAAmBM,IAAI,CAACC;MAAQ,GAAvBD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAxBID,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}