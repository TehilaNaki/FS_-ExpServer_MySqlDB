{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tehila Naki\\\\Documents\\\\FS_-ExpServer_MySqlDB\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"../css/Posts.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Posts(_ref) {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [editedPost, setEditedPost] = useState(null);\n  const [editedComment, setEditedComment] = useState(null);\n  const [newPost, setNewPost] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const [newComment, setNewComment] = useState({\n    name: \"\",\n    email: \"\",\n    body: \"\"\n  });\n  const {\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const postRef = useRef(null);\n  const [isAddingPost, setIsAddingPost] = useState(false);\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const [filter, setFilter] = useState(\"all\"); // Added filter state\n\n  useEffect(() => {\n    if (user && user.id) {\n      axios.get(`http://localhost:3010/posts`).then(response => {\n        setPosts(response.data);\n        console.log('success');\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }, [user]);\n  const handleFilterChange = e => {\n    setFilter(e.target.value);\n    if (e.target.value === 'my-posts') {\n      if (user && user.id) {\n        axios.get(`http://localhost:3010/users/${user.id}/posts`).then(response => {\n          setPosts(response.data);\n          console.log('success');\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    } else {\n      if (user && user.id) {\n        axios.get(`http://localhost:3010/posts`).then(response => {\n          setPosts(response.data);\n          console.log('success');\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    if (editedPost) {\n      postRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [editedPost]);\n  const newPostDraft = {\n    title: newPost.title,\n    body: newPost.body\n  };\n  const handleAddPost = () => {\n    setIsAddingPost(true);\n  };\n  const handleCommentsClick = postId => {\n    console.log(postId);\n    setSelectedPostId(postId);\n    axios.get(`http://localhost:3010/comments/${postId}`).then(response => {\n      const comments = response.data;\n      console.log(comments);\n      setComments(comments);\n    }).catch(error => {\n      console.error('Error retrieving comments:', error);\n    });\n  };\n  const handleCloseCommentsClick = () => {\n    setSelectedPostId(null);\n  };\n  const handlePostClick = postId => {\n    navigate(`/Posts/${postId}`);\n  };\n  const handleEditPost = postId => {\n    const selectedPost = posts.find(post => post.id === postId);\n    setEditedPost(selectedPost);\n  };\n  const handleSavePost = () => {\n    if (editedPost) {\n      axios.put(`http://localhost:3010/posts/${editedPost.id}`, editedPost).then(response => {\n        console.log('Post updated successfully');\n        setEditedPost(null);\n      }).catch(error => {\n        console.error('Error updating post:', error);\n      });\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditedPost(null);\n  };\n  const handleDeletePost = postId => {\n    axios.delete(`http://localhost:3010/posts/${postId}`).then(response => {\n      console.log('Post deleted successfully');\n      const updatedPosts = posts.filter(post => post.id !== postId);\n      setPosts(updatedPosts);\n    }).catch(error => {\n      console.error('Error deleting post:', error);\n    });\n  };\n  const handleNewPostChange = e => {\n    setNewPost({\n      ...newPost,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSaveNewPost = () => {\n    const newPostWithId = {\n      ...newPost,\n      user_id: user.id\n    };\n    console.log(newPostWithId);\n    axios.post('http://localhost:3010/posts', newPostWithId).then(response => {\n      const postId = response.data.id;\n      console.log('New post created with ID:', postId);\n      const updatedPosts = [...posts, newPostWithId];\n      setPosts(updatedPosts);\n      setNewPost({\n        title: \"\",\n        body: \"\"\n      });\n      setIsAddingPost(false);\n    }).catch(error => {\n      console.error('Error creating post:', error);\n    });\n  };\n  const handleCancelAddPost = () => {\n    setIsAddingPost(false);\n  };\n  const handleAddComment = () => {\n    setIsAddingComment(true);\n  };\n  const handleSaveComment = () => {\n    if (editedComment !== null) {\n      // Logic to save the edited comment\n      axios.put(`http://localhost:3010/comments/${editedComment.id}`, editedComment).then(response => {\n        console.log('Comment updated successfully');\n        const updatedComments = comments.map(comment => comment.id === editedComment.id ? editedComment : comment);\n        setComments(updatedComments);\n        setEditedComment(null);\n      }).catch(error => {\n        console.error('Error updating comment:', error);\n      });\n    } else if (newComment) {\n      // Logic to save the new comment\n      const newCommentWithId = {\n        ...newComment,\n        post_id: selectedPostId\n      };\n      axios.post(\"http://localhost:3010/comments\", newCommentWithId).then(response => {\n        console.log(\"Comment added successfully\");\n        const updatedComments = [...comments, newCommentWithId];\n        setComments(updatedComments);\n        setNewComment({\n          name: \"\",\n          email: \"\",\n          body: \"\"\n        });\n        setIsAddingComment(false);\n      }).catch(error => {\n        console.error(\"Error adding comment:\", error);\n        // Handle error\n      });\n    }\n  };\n\n  const handleCancelEditComment = () => {\n    setEditedComment(null);\n  };\n  const handleEditComment = comment => {\n    setEditedComment(comment);\n  };\n  const handleDeleteComment = commentId => {\n    axios.delete(`http://localhost:3010/comments/${commentId}`).then(response => {\n      console.log('Comment deleted successfully');\n      const updatedComments = comments.filter(comment => comment.id !== commentId);\n      setComments(updatedComments);\n    }).catch(error => {\n      console.error('Error deleting comment:', error);\n    });\n  };\n  const handleNewCommentChange = e => {\n    setNewComment({\n      ...newComment,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filtering-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter\",\n        children: \"Filter:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"filter\",\n        value: filter,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"my-posts\",\n          children: \"My Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: post.id === (editedPost === null || editedPost === void 0 ? void 0 : editedPost.id) ? postRef : null,\n        className: postId === post.id ? \"selected-post post\" : \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), editedPost && editedPost.id === post.id ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedPost.body,\n          onChange: e => setEditedPost({\n            ...editedPost,\n            body: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this), selectedPostId === post.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: editedComment && editedComment.id === comment.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Name\",\n                value: editedComment.name,\n                onChange: e => setEditedComment({\n                  ...editedComment,\n                  name: e.target.value,\n                  id: comment.id\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Email\",\n                value: editedComment.email,\n                onChange: e => setEditedComment({\n                  ...editedComment,\n                  email: e.target.value,\n                  id: comment.id\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"body\",\n                placeholder: \"Comment body\",\n                value: editedComment.body,\n                onChange: e => setEditedComment({\n                  ...editedComment,\n                  body: e.target.value,\n                  id: comment.id\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSaveComment,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleCancelEditComment,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Name: \", comment.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Email: \", comment.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditComment(comment, index),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteComment(comment.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 19\n          }, this)), isAddingComment ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"Name\",\n              value: newComment.name,\n              onChange: handleNewCommentChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              value: newComment.email,\n              onChange: handleNewCommentChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"body\",\n              placeholder: \"Comment body\",\n              value: newComment.body,\n              onChange: handleNewCommentChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveComment,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsAddingComment(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddComment,\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this), selectedPostId === post.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCloseCommentsClick,\n          children: \"Close Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentsClick(post.id),\n          children: \"View Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }, this), editedPost && editedPost.id === post.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSavePost,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditPost(post.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeletePost(post.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-post-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-post-button\",\n        onClick: handleAddPost,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), isAddingPost && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Post title\",\n        value: newPostDraft.title,\n        onChange: handleNewPostChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"body\",\n        placeholder: \"Post body\",\n        value: newPostDraft.body,\n        onChange: handleNewPostChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveNewPost,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelAddPost,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"iyixfDLwaFWoFGcIH8RJnlqBMZM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_ref","_s","user","posts","setPosts","selectedPostId","setSelectedPostId","comments","setComments","editedPost","setEditedPost","editedComment","setEditedComment","newPost","setNewPost","title","body","newComment","setNewComment","name","email","postId","navigate","postRef","isAddingPost","setIsAddingPost","isAddingComment","setIsAddingComment","filter","setFilter","id","get","then","response","data","console","log","catch","error","handleFilterChange","e","target","value","current","scrollIntoView","behavior","newPostDraft","handleAddPost","handleCommentsClick","handleCloseCommentsClick","handlePostClick","handleEditPost","selectedPost","find","post","handleSavePost","put","handleCancelEdit","handleDeletePost","delete","updatedPosts","handleNewPostChange","handleSaveNewPost","newPostWithId","user_id","handleCancelAddPost","handleAddComment","handleSaveComment","updatedComments","map","comment","newCommentWithId","post_id","handleCancelEditComment","handleEditComment","handleDeleteComment","commentId","handleNewCommentChange","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","ref","index","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tehila Naki/Documents/FS_-ExpServer_MySqlDB/src/pages/Posts.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport \"../css/Posts.css\";\r\nimport axios from 'axios';\r\n\r\nfunction Posts({ user }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPostId, setSelectedPostId] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [editedPost, setEditedPost] = useState(null);\r\n  const [editedComment, setEditedComment] = useState(null);\r\n  const [newPost, setNewPost] = useState({ title: \"\", body: \"\" });\r\n  const [newComment, setNewComment] = useState({ name: \"\", email: \"\", body: \"\" });\r\n  const { postId } = useParams();\r\n  const navigate = useNavigate();\r\n  const postRef = useRef(null);\r\n  const [isAddingPost, setIsAddingPost] = useState(false);\r\n  const [isAddingComment, setIsAddingComment] = useState(false);\r\n  const [filter, setFilter] = useState(\"all\"); // Added filter state\r\n\r\n  useEffect(() => {\r\n    if (user && user.id) {\r\n      axios.get(`http://localhost:3010/posts`)\r\n        .then(response => {\r\n          setPosts(response.data);\r\n          console.log('success');\r\n      })\r\n        .catch(error => {\r\n          console.error(error);\r\n      });\r\n    }\r\n  }, [user]);\r\n  const handleFilterChange = (e) => {\r\n    setFilter(e.target.value);\r\n    if(e.target.value==='my-posts')\r\n    {\r\n      if (user && user.id) {\r\n      axios.get(`http://localhost:3010/users/${user.id}/posts`)\r\n        .then(response => {\r\n          setPosts(response.data);\r\n          console.log('success');\r\n      })\r\n        .catch(error => {\r\n          console.error(error);\r\n      });\r\n    }\r\n    }\r\n    else{\r\n      if (user && user.id) {\r\n        axios.get(`http://localhost:3010/posts`)\r\n          .then(response => {\r\n            setPosts(response.data);\r\n            console.log('success');\r\n        })\r\n          .catch(error => {\r\n            console.error(error);\r\n        });\r\n      }\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editedPost) {\r\n      postRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [editedPost]);\r\n\r\n  const newPostDraft = {\r\n    title: newPost.title,\r\n    body: newPost.body\r\n  };\r\n\r\n  const handleAddPost = () => {\r\n    setIsAddingPost(true);\r\n  };\r\n\r\n  const handleCommentsClick = (postId) => {\r\n    console.log(postId);\r\n    setSelectedPostId(postId);\r\n    axios\r\n      .get(`http://localhost:3010/comments/${postId}`)\r\n      .then((response) => {\r\n        const comments = response.data;\r\n        console.log(comments);\r\n        setComments(comments);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error retrieving comments:', error);\r\n      });\r\n  };\r\n\r\n  const handleCloseCommentsClick = () => {\r\n    setSelectedPostId(null);\r\n  };\r\n\r\n  const handlePostClick = (postId) => {\r\n    navigate(`/Posts/${postId}`);\r\n  };\r\n\r\n  const handleEditPost = (postId) => {\r\n    const selectedPost = posts.find((post) => post.id === postId);\r\n    setEditedPost(selectedPost);\r\n  };\r\n\r\n  const handleSavePost = () => {\r\n    if (editedPost) {\r\n      axios\r\n        .put(`http://localhost:3010/posts/${editedPost.id}`, editedPost)\r\n        .then((response) => {\r\n          console.log('Post updated successfully');\r\n          setEditedPost(null);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error updating post:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditedPost(null);\r\n  };\r\n\r\n  const handleDeletePost = (postId) => {\r\n    axios\r\n      .delete(`http://localhost:3010/posts/${postId}`)\r\n      .then((response) => {\r\n        console.log('Post deleted successfully');\r\n        const updatedPosts = posts.filter((post) => post.id !== postId);\r\n        setPosts(updatedPosts);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error deleting post:', error);\r\n      });\r\n  };\r\n\r\n  const handleNewPostChange = (e) => {\r\n    setNewPost({ ...newPost, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSaveNewPost = () => {\r\n    const newPostWithId = {\r\n      ...newPost,\r\n      user_id: user.id,\r\n    };\r\n    console.log(newPostWithId);\r\n\r\n    axios\r\n      .post('http://localhost:3010/posts', newPostWithId)\r\n      .then((response) => {\r\n        const postId = response.data.id;\r\n        console.log('New post created with ID:', postId);\r\n        const updatedPosts = [...posts, newPostWithId];\r\n        setPosts(updatedPosts);\r\n        setNewPost({ title: \"\", body: \"\" });\r\n        setIsAddingPost(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error creating post:', error);\r\n      });\r\n  };\r\n\r\n  const handleCancelAddPost = () => {\r\n    setIsAddingPost(false);\r\n  };\r\n\r\n  const handleAddComment = () => {\r\n    setIsAddingComment(true);\r\n  };\r\n\r\n  const handleSaveComment = () => {\r\n    if (editedComment !== null) {\r\n      // Logic to save the edited comment\r\n      axios\r\n        .put(`http://localhost:3010/comments/${editedComment.id}`, editedComment)\r\n        .then((response) => {\r\n          console.log('Comment updated successfully');\r\n          const updatedComments = comments.map((comment) =>\r\n            comment.id === editedComment.id ? editedComment : comment\r\n          );\r\n          setComments(updatedComments);\r\n      setEditedComment(null);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error updating comment:', error);\r\n        });\r\n    } else if(newComment) {\r\n      // Logic to save the new comment\r\n      const newCommentWithId = {\r\n        ...newComment,\r\n        post_id: selectedPostId,\r\n      };\r\n\r\n      axios\r\n        .post(\"http://localhost:3010/comments\", newCommentWithId)\r\n        .then(response => {\r\n          console.log(\"Comment added successfully\");\r\n          const updatedComments = [...comments, newCommentWithId];\r\n          setComments(updatedComments);\r\n          setNewComment({ name: \"\", email: \"\", body: \"\" });\r\n          setIsAddingComment(false);\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error adding comment:\", error);\r\n       // Handle error\r\n        });\r\n    \r\n    }\r\n  };\r\n\r\n  \r\n  \r\n  \r\n  const handleCancelEditComment = () => {\r\n    setEditedComment(null);\r\n  };\r\n\r\n  const handleEditComment = (comment) => {\r\n    setEditedComment(comment);\r\n  };\r\n\r\n  const handleDeleteComment = (commentId) => {\r\n    axios\r\n      .delete(`http://localhost:3010/comments/${commentId}`)\r\n      .then((response) => {\r\n        console.log('Comment deleted successfully');\r\n    const updatedComments = comments.filter((comment) => comment.id !== commentId);\r\n    setComments(updatedComments);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error deleting comment:', error);\r\n      });\r\n  };\r\n\r\n  const handleNewCommentChange = (e) => {\r\n    setNewComment({ ...newComment, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"filtering-container\">\r\n        <label htmlFor=\"filter\">Filter:</label>\r\n        <select id=\"filter\" value={filter} onChange={handleFilterChange}>\r\n          <option value=\"all\">All Posts</option>\r\n          <option value=\"my-posts\">My Posts</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"posts-container\">\r\n        {posts.map((post) => (\r\n          <div\r\n            key={post.id}\r\n            ref={post.id === editedPost?.id ? postRef : null}\r\n            className={postId === post.id ? \"selected-post post\" : \"post\"}\r\n          >\r\n            <h3>{post.title}</h3>\r\n            {editedPost && editedPost.id === post.id ? (\r\n              <textarea\r\n                value={editedPost.body}\r\n                onChange={(e) =>\r\n                  setEditedPost({ ...editedPost, body: e.target.value })\r\n                }\r\n              />\r\n            ) : (\r\n              <p>{post.body}</p>\r\n            )}\r\n            {selectedPostId === post.id && (\r\n              <div>\r\n                <h4>Comments:</h4>\r\n                {comments.map((comment, index) => (\r\n                  <div key={comment.id} className=\"comment\">\r\n                    {editedComment && editedComment.id === comment.id ? (\r\n                      <div>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          placeholder=\"Name\"\r\n                          value={editedComment.name}\r\n                          onChange={(e) =>\r\n                            setEditedComment({\r\n                              ...editedComment,\r\n                              name: e.target.value,\r\n                              id:comment.id\r\n                            })\r\n                          }\r\n                        />\r\n                        <input\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"Email\"\r\n                          value={editedComment.email}\r\n                          onChange={(e) =>\r\n                            setEditedComment({\r\n                              ...editedComment,\r\n                              email: e.target.value,\r\n                              id:comment.id\r\n                            })\r\n                          }\r\n                        />\r\n                        <textarea\r\n                          name=\"body\"\r\n                          placeholder=\"Comment body\"\r\n                          value={editedComment.body}\r\n                          onChange={(e) =>\r\n                            setEditedComment({\r\n                              ...editedComment,\r\n                              body: e.target.value,\r\n                              id:comment.id\r\n                            })\r\n                          }\r\n                        />\r\n                        <button onClick={handleSaveComment}>Save</button>\r\n                        <button onClick={handleCancelEditComment}>\r\n                          Cancel\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <>\r\n                        <p>Name: {comment.name}</p>\r\n                        <p>Email: {comment.email}</p>\r\n                        <p>{comment.body}</p>\r\n                        <button onClick={() => handleEditComment(comment, index)}>\r\n                          Edit\r\n                        </button>\r\n                        <button onClick={() => handleDeleteComment(comment.id)}>\r\n                          Delete\r\n                        </button>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n                {isAddingComment ? (\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder=\"Name\"\r\n                      value={newComment.name}\r\n                      onChange={handleNewCommentChange}\r\n                    />\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={newComment.email}\r\n                      onChange={handleNewCommentChange}\r\n                    />\r\n                    <textarea\r\n                      name=\"body\"\r\n                      placeholder=\"Comment body\"\r\n                      value={newComment.body}\r\n                      onChange={handleNewCommentChange}\r\n                    />\r\n                    <button onClick={handleSaveComment}>Save</button>\r\n                    <button onClick={() => setIsAddingComment(false)}>\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <button onClick={handleAddComment}>Add Comment</button>\r\n                )}\r\n              </div>\r\n            )}\r\n            {selectedPostId === post.id ? (\r\n              <button onClick={handleCloseCommentsClick}>Close Comments</button>\r\n            ) : (\r\n              <button onClick={() => handleCommentsClick(post.id)}>\r\n                View Comments\r\n              </button>\r\n            )}\r\n            {editedPost && editedPost.id === post.id ? (\r\n              <>\r\n                <button onClick={handleSavePost}>Save</button>\r\n                <button onClick={handleCancelEdit}>Cancel</button>\r\n              </>\r\n            ) : (\r\n              <button onClick={() => handleEditPost(post.id)}>Edit</button>\r\n            )}\r\n            <button onClick={() => handleDeletePost(post.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"add-post-container\">\r\n        <button className=\"add-post-button\" onClick={handleAddPost}>\r\n          Add Post\r\n        </button>\r\n      </div>\r\n\r\n      {isAddingPost && (\r\n        <div className=\"post\">\r\n          <h3>New Post</h3>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Post title\"\r\n            value={newPostDraft.title}\r\n            onChange={handleNewPostChange}\r\n          />\r\n          <textarea\r\n            name=\"body\"\r\n            placeholder=\"Post body\"\r\n            value={newPostDraft.body}\r\n            onChange={handleNewPostChange}\r\n          />\r\n          <button onClick={handleSaveNewPost}>Save</button>\r\n          <button onClick={handleCancelAddPost}>Cancel</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}