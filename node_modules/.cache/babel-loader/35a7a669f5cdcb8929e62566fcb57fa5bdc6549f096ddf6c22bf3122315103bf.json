{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tehila Naki\\\\Documents\\\\SE\\\\Y4\\\\FS\\\\Project6_Server\\\\project6\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, Navigate, useParams, useNavigate } from \"react-router-dom\";\nimport \"../css/Posts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts(_ref) {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [comments, setComments] = useState([]);\n  const {\n    postId\n  } = useParams();\n  console.log(postId);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(data => {\n      data = data.filter(p => p.userId === user.id);\n      setPosts(data);\n    }).catch(error => {\n      console.error(\"Error fetching posts:\", error);\n    });\n  }, [user]);\n  const handleCommentsClick = postId => {\n    setSelectedPostId(postId);\n    fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`).then(response => response.json()).then(data => {\n      setComments(data);\n    }).catch(error => {\n      console.error(\"Error fetching comments:\", error);\n    });\n  };\n  const handleCloseCommentsClick = postId => {\n    setSelectedPostId(null);\n  };\n  const handlePostClick = postId => {\n    navigate(`/Posts/${postId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handlePostClick(post.id),\n        className: postId == post.id ? \"selected-post post\" : \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), selectedPostId === post.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\\"Name: \\\" \", comment.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\\"Email: \\\" \", comment.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this) : null, selectedPostId === post.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCloseCommentsClick(post.id),\n          children: \"Close Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentsClick(post.id),\n          children: \"View Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"59jpc+oayrZfrPxbRWJ/gr+BGnU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","Link","Navigate","useParams","useNavigate","jsxDEV","_jsxDEV","Posts","_ref","_s","user","posts","setPosts","selectedPostId","setSelectedPostId","comments","setComments","postId","console","log","navigate","fetch","then","response","json","data","filter","p","userId","id","catch","error","handleCommentsClick","handleCloseCommentsClick","handlePostClick","children","className","map","post","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","body","comment","name","email","_c","$RefreshReg$"],"sources":["C:/Users/Tehila Naki/Documents/SE/Y4/FS/Project6_Server/project6/src/pages/Posts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, Navigate, useParams, useNavigate } from \"react-router-dom\";\r\nimport \"../css/Posts.css\";\r\n\r\nfunction Posts({ user }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPostId, setSelectedPostId] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const { postId } = useParams();\r\n  console.log(postId);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        data = data.filter((p) => p.userId === user.id);\r\n        setPosts(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching posts:\", error);\r\n      });\r\n  }, [user]);\r\n\r\n  const handleCommentsClick = (postId) => {\r\n    setSelectedPostId(postId);\r\n\r\n    fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setComments(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching comments:\", error);\r\n      });\r\n  };\r\n  const handleCloseCommentsClick = (postId) => {\r\n    setSelectedPostId(null);\r\n  };\r\n  const handlePostClick = (postId) => {\r\n    \r\n    navigate(`/Posts/${postId}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"posts-container\">\r\n        {posts.map((post) => (\r\n          <div\r\n            onClick={() => handlePostClick(post.id)}\r\n            key={post.id}\r\n            className={postId == post.id ? \"selected-post post\" : \"post\"}\r\n          >\r\n            <h3>{post.title}</h3>\r\n            <p>{post.body}</p>\r\n            {selectedPostId === post.id ? (\r\n              <div>\r\n                <h4>Comments:</h4>\r\n                {comments.map((comment) => (\r\n                  <div key={comment.id} className=\"comment\">\r\n                    <p>\"Name: \" {comment.name}</p>\r\n                    <p>\"Email: \" {comment.email}</p>\r\n                    <p>{comment.body}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : null}\r\n            {selectedPostId === post.id ? (\r\n              <button onClick={() => handleCloseCommentsClick(post.id)}>\r\n                Close Comments\r\n              </button>\r\n            ) : (\r\n              <button onClick={() => handleCommentsClick(post.id)}>\r\n                View Comments\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}