{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tehila Naki\\\\Documents\\\\SE\\\\Y4\\\\FS\\\\Project6_Server\\\\project6\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link, Navigate, useParams, useNavigate } from \"react-router-dom\";\nimport \"../css/Posts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Posts(_ref) {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [editedPost, setEditedPost] = useState(null);\n  const [newPost, setNewPost] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const {\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const postRef = useRef(null);\n  const [isAddingPost, setIsAddingPost] = useState(false);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(data => {\n      data = data.filter(p => p.userId === user.id);\n      setPosts(data);\n    }).catch(error => {\n      console.error(\"Error fetching posts:\", error);\n    });\n  }, [user]);\n  useEffect(() => {\n    // Scroll to the edited post when it's opened for editing\n    if (editedPost) {\n      postRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [editedPost]);\n  const newPostDraft = {\n    title: newPost.title,\n    body: newPost.body\n  };\n  const handleAddPost = () => {\n    setIsAddingPost(true);\n  };\n  const handleCommentsClick = postId => {\n    setSelectedPostId(postId);\n    fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`).then(response => response.json()).then(data => {\n      setComments(data);\n    }).catch(error => {\n      console.error(\"Error fetching comments:\", error);\n    });\n  };\n  const handleCloseCommentsClick = () => {\n    setSelectedPostId(null);\n  };\n  const handlePostClick = postId => {\n    navigate(`/Posts/${postId}`);\n  };\n  const handleEditPost = postId => {\n    const selectedPost = posts.find(post => post.id === postId);\n    setEditedPost(selectedPost);\n  };\n  const handleSavePost = () => {\n    if (editedPost) {\n      const updatedPosts = posts.map(post => {\n        if (post.id === editedPost.id) {\n          return editedPost;\n        }\n        return post;\n      });\n      setPosts(updatedPosts);\n      setEditedPost(null);\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditedPost(null);\n  };\n  const handleDeletePost = postId => {\n    const updatedPosts = posts.filter(post => post.id !== postId);\n    setPosts(updatedPosts);\n  };\n  const handleNewPostChange = e => {\n    setNewPost({\n      ...newPost,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSaveNewPost = () => {\n    const newPostWithId = {\n      ...newPost,\n      id: Math.floor(Math.random() * 1000) + 1,\n      userId: user.id\n    };\n    const updatedPosts = [...posts, newPostWithId];\n    setPosts(updatedPosts);\n    setNewPost({\n      title: \"\",\n      body: \"\"\n    });\n    setIsAddingPost(false);\n  };\n  const handleCancelAddPost = () => {\n    setIsAddingPost(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: post.id === (editedPost === null || editedPost === void 0 ? void 0 : editedPost.id) ? postRef : null,\n        className: postId === post.id ? \"selected-post post\" : \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), editedPost && editedPost.id === post.id ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedPost.body,\n          onChange: e => setEditedPost({\n            ...editedPost,\n            body: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), selectedPostId === post.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\\"Name: \\\" \", comment.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\\"Email: \\\" \", comment.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), selectedPostId === post.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCloseCommentsClick,\n          children: \"Close Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentsClick(post.id),\n          children: \"View Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this), editedPost && editedPost.id === post.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSavePost,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditPost(post.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeletePost(post.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-post-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-post-button\",\n        onClick: handleAddPost,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), isAddingPost && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Post title\",\n        value: newPostDraft.title,\n        onChange: handleNewPostChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"body\",\n        placeholder: \"Post body\",\n        value: newPostDraft.body,\n        onChange: handleNewPostChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveNewPost,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelAddPost,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"0zoB4hrzD8Crdcw7gRb06vONnnc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","Navigate","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_ref","_s","user","posts","setPosts","selectedPostId","setSelectedPostId","comments","setComments","editedPost","setEditedPost","newPost","setNewPost","title","body","postId","navigate","postRef","isAddingPost","setIsAddingPost","fetch","then","response","json","data","filter","p","userId","id","catch","error","console","current","scrollIntoView","behavior","newPostDraft","handleAddPost","handleCommentsClick","handleCloseCommentsClick","handlePostClick","handleEditPost","selectedPost","find","post","handleSavePost","updatedPosts","map","handleCancelEdit","handleDeletePost","handleNewPostChange","e","target","name","value","handleSaveNewPost","newPostWithId","Math","floor","random","handleCancelAddPost","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","onChange","comment","email","onClick","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Tehila Naki/Documents/SE/Y4/FS/Project6_Server/project6/src/pages/Posts.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link, Navigate, useParams, useNavigate } from \"react-router-dom\";\r\nimport \"../css/Posts.css\";\r\n\r\nfunction Posts({ user }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPostId, setSelectedPostId] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [editedPost, setEditedPost] = useState(null);\r\n  const [newPost, setNewPost] = useState({ title: \"\", body: \"\" });\r\n  const { postId } = useParams();\r\n  const navigate = useNavigate();\r\n  const postRef = useRef(null);\r\n  const [isAddingPost, setIsAddingPost] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        data = data.filter((p) => p.userId === user.id);\r\n        setPosts(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching posts:\", error);\r\n      });\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    // Scroll to the edited post when it's opened for editing\r\n    if (editedPost) {\r\n      postRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [editedPost]);\r\n\r\n  const newPostDraft = {\r\n    title: newPost.title,\r\n    body: newPost.body\r\n  };\r\n\r\n  const handleAddPost = () => {\r\n    setIsAddingPost(true);\r\n  };\r\n\r\n  const handleCommentsClick = (postId) => {\r\n    setSelectedPostId(postId);\r\n\r\n    fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setComments(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching comments:\", error);\r\n      });\r\n  };\r\n\r\n  const handleCloseCommentsClick = () => {\r\n    setSelectedPostId(null);\r\n  };\r\n\r\n  const handlePostClick = (postId) => {\r\n    navigate(`/Posts/${postId}`);\r\n  };\r\n\r\n  const handleEditPost = (postId) => {\r\n    const selectedPost = posts.find((post) => post.id === postId);\r\n    setEditedPost(selectedPost);\r\n  };\r\n\r\n  const handleSavePost = () => {\r\n    if (editedPost) {\r\n      const updatedPosts = posts.map((post) => {\r\n        if (post.id === editedPost.id) {\r\n          return editedPost;\r\n        }\r\n        return post;\r\n      });\r\n      setPosts(updatedPosts);\r\n      setEditedPost(null);\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditedPost(null);\r\n  };\r\n\r\n  const handleDeletePost = (postId) => {\r\n    const updatedPosts = posts.filter((post) => post.id !== postId);\r\n    setPosts(updatedPosts);\r\n  };\r\n\r\n  const handleNewPostChange = (e) => {\r\n    setNewPost({ ...newPost, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSaveNewPost = () => {\r\n    const newPostWithId = {\r\n      ...newPost,\r\n      id: Math.floor(Math.random() * 1000) + 1,\r\n      userId: user.id,\r\n    };\r\n    const updatedPosts = [...posts, newPostWithId];\r\n    setPosts(updatedPosts);\r\n    setNewPost({ title: \"\", body: \"\" });\r\n    setIsAddingPost(false);\r\n  };\r\n\r\n  const handleCancelAddPost = () => {\r\n    setIsAddingPost(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"posts-container\">\r\n        {posts.map((post) => (\r\n          <div\r\n            key={post.id}\r\n            ref={post.id === editedPost?.id ? postRef : null}\r\n            className={postId === post.id ? \"selected-post post\" : \"post\"}\r\n          >\r\n            <h3>{post.title}</h3>\r\n            {editedPost && editedPost.id === post.id ? (\r\n              <textarea\r\n                value={editedPost.body}\r\n                onChange={(e) =>\r\n                  setEditedPost({ ...editedPost, body: e.target.value })\r\n                }\r\n              />\r\n            ) : (\r\n              <p>{post.body}</p>\r\n            )}\r\n            {selectedPostId === post.id && (\r\n              <div>\r\n                <h4>Comments:</h4>\r\n                {comments.map((comment) => (\r\n                  <div key={comment.id} className=\"comment\">\r\n                    <p>\"Name: \" {comment.name}</p>\r\n                    <p>\"Email: \" {comment.email}</p>\r\n                    <p>{comment.body}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {selectedPostId === post.id ? (\r\n              <button onClick={handleCloseCommentsClick}>\r\n                Close Comments\r\n              </button>\r\n            ) : (\r\n              <button onClick={() => handleCommentsClick(post.id)}>\r\n                View Comments\r\n              </button>\r\n            )}\r\n            {editedPost && editedPost.id === post.id ? (\r\n              <>\r\n                <button onClick={handleSavePost}>Save</button>\r\n                <button onClick={handleCancelEdit}>Cancel</button>\r\n              </>\r\n            ) : (\r\n              <button onClick={() => handleEditPost(post.id)}>Edit</button>\r\n            )}\r\n            <button onClick={() => handleDeletePost(post.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"add-post-container\">\r\n        <button className=\"add-post-button\" onClick={handleAddPost}>\r\n          Add Post\r\n        </button>\r\n      </div>\r\n\r\n      {isAddingPost && (\r\n        <div className=\"post\">\r\n          <h3>New Post</h3>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Post title\"\r\n            value={newPostDraft.title}\r\n            onChange={handleNewPostChange}\r\n          />\r\n          <textarea\r\n            name=\"body\"\r\n            placeholder=\"Post body\"\r\n            value={newPostDraft.body}\r\n            onChange={handleNewPostChange}\r\n          />\r\n          <button onClick={handleSaveNewPost}>Save</button>\r\n          <button onClick={handleCancelAddPost}>Cancel</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}